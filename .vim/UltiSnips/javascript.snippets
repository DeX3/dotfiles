extends c-style-basics

global !p
def dashCase(name):
		s1 = re.sub('(.)([A-Z][a-z]+)', r'\1-\2', name)
		return re.sub('([a-z0-9])([A-Z])', r'\1-\2', s1).lower()
endglobal


snippet jshglobal "JSHint global definition rule"
/* global ${1:${VISUAL}}: true */
endsnippet

snippet ptry "Promise.try( ... )"
Promise.try( function() \{
  ${1:${VISUAL}}
\} );
endsnippet

snippet func "function( ... ) { ... }"
function(${1}) \{
  ${2}
\}
endsnippet

snippet ( "()"
( ${1} )
endsnippet

snippet thenf ".then( function( ... ) { ... } )" !w
then( function(${1}) {
  ${2}
} )${3}
endsnippet

snippet thenfo ".thenf( function( ... ) {" !w
then( function(${1}) {${2}
endsnippet

snippet thena ".then( ( ... ) => ... )" !w
then( (${1}) => ${2} )${3}
endsnippet

snippet then ".then( ... )" !w
then( ${1} )${2}
endsnippet

snippet tapf ".tap( function( ... ) { ... } )" !w
tap( function(${1}) {
  ${2}
} )${3}
endsnippet

snippet tapa ".tap( ( ... ) => ... )" !w
tap( (${1}) => ${2} )${3}
endsnippet

snippet tapl ".tap( ( ... ) => console.log(...) )" !w
tap( ${2:()} => console.log(${1}) )${3}
endsnippet

snippet tap "tap( ... )" !w
tap( ${1} )${2}
endsnippet

snippet catchf ".catch( function( ... ) { ... } )" !w
catch( function(${1}) {
  ${2}
} )${3}
endsnippet

snippet catch "catch( ... )" !w
catch( ${1} )${2}
endsnippet

snippet logs "console.log( ... );"
console.log( '${1}' );
endsnippet

snippet log "console.log( '...' );"
console.log( ${1} );
endsnippet

snippet info "atlas.log.info( '...' );"
atlas.log.info( '${1}' );
endsnippet

snippet describe "describe( '...', function() { ... } );"
describe( '${1}', function() {
  ${2}
} );
endsnippet

snippet it "it( 'should ...', ... )"
it( 'should ${1}', function() {
  ${2}
} );
endsnippet

snippet pend "it( 'should ...' );"
it( 'should ${1}' );
endsnippet

snippet beforeEach "beforeEach( function() { ... } )"
beforeEach( function() {
  ${1}
} );
endsnippet

snippet context "context( '...', function() { ... } )"
context( '${1}', function() {
  ${2}
} );
endsnippet

snippet const "const ... = require( '...' );"
const ${1} = require( '`!p
if t[1] == 'Promise':
	snip.rv = 'bluebird'
else:
	snip.rv = dashCase( t[1] )
`' );
endsnippet

snippet global "/* global -... */"
/* global -${1} */
endsnippet

snippet "const Promise" " = require( 'bluebird' );"
const Promise = require( 'bluebird' )${1}
endsnippet

snippet "const path" " = require( 'path' );"
const path = require( 'path' )${1}
endsnippet
